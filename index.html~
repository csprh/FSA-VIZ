<head>
    <meta charset="UTF-8">
    <title>FSA Data Demo</title>
  <!-- This demo shows how to use opensource library Gio.js to create an interactive 3D globe -->
  <!-- Know more fancier usage of Gio.js, see: 
       official website: http://giojs.org  
       github repo: https://github.com/syt123450/giojs
-->
<!--  For more interesting Giojs demo, see Giojs API Codepen Collection: https://codepen.io/collection/DkBobG/  -->
    <script src="https://rawgit.com/syt123450/giojs/master/examples/js/jquery.min.js"></script>
    <script src="https://rawgit.com/syt123450/giojs/master/examples/js/three.min.js"></script>
  <script src="https://rawgit.com/syt123450/giojs/master/build/gio.min.js"></script>
  
  <script src="https://raw.githack.com/csprh/FSA-VIZ/master/jsonWhole.js"></script>
  
    <!-- load data in this data script -->
</head>
<body>
 
<!--Create a <div> where the globe will be rendered -->
<div id="globalArea"></div>
</body>

<style>

html, body {

    height: 100%;
    width: 100%;
    margin: 0;
    padding: 0;

}

header {

    position: absolute;
    width: 100%;
    height: 40px;
    line-height: 40px;
    text-align: center;
    color: white;
    z-index: 1000;

}

#globalArea {
  
    height: 100%;
    width: 100%;
    margin: 0;
    padding: 0;
}

a {
  color: #ff0000;
}




</style>


<script>
// Get the container to hold the IO globe
var container = document.getElementById( "globalArea" );
// Create Gio.controller
var controller = new GIO.Controller( container );
//controller.setStyle("magic");
// Add data
controller.configure(true);
controller.configure(
{
	"control": {
		"stats": false,
		"disableUnmentioned": false,
		"lightenMentioned": true,
		"inOnly": false,
		"outOnly": false,
		"initCountry": "US",
		"halo": true,
		"transparentBackground": false,
		"autoRotation": false,
		"rotationRatio": 1
	},
	"color": {
		"surface": 1744048,
		"selected": 2141154,
		"in": 16777215,
		"out": 2141154,
		"halo": 2141154,
		"background": 0
	},
	"brightness": {
		"ocean": 0.5,
		"mentioned": 0.5,
		"related": 0.5
	}
}
);



for (let i = 0; i<data.length;i++){
  data[i].v = data[i].v*10000;
}
controller.addData( data );

// Initialize and render the globe
controller.init();
</script>
