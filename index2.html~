<head>
<style>
html, body {

    height: 100%;
    width: 100%;
    margin: 0;
    padding: 0;

}

header {

    position: absolute;
    width: 100%;
    height: 40px;
    line-height: 40px;
    text-align: center;
    color: white;
    z-index: 1000;

}

#globalArea {
  
    height: 100%;
    width: 100%;
    margin: 0;
    padding: 0;
}

a {
  color: #ff0000;
}


 </style>
   <script src="https://raw.githack.com/csprh/FSA-VIZ/master/jsonWhole.js"></script>
  <script src="//unpkg.com/three"></script>
  <script src="//unpkg.com/three/examples/js/controls/TrackballControls.js"></script>
  <script src="//unpkg.com/three-globe"></script>
  <!--<script src="../../dist/three-globe.js"></script>-->
</head>

<body>
<div id="globeViz"></div>

<script>
 fetch('https://raw.githack.com/csprh/FSA-VIZ/master/ne_110m_admin_0_countries.geojson').then(res => res.json()).then(countries =>
  {
    const Globe = new ThreeGlobe()
      .globeImageUrl('//unpkg.com/three-globe/example/img/earth-dark.jpg')
      .polygonsData(countries.features)
      .polygonCapColor(() => 'rgba(200, 0, 0, 0.7)')
      .polygonSideColor(() => 'rgba(0, 200, 0, 0.1)')
      .polygonStrokeColor(() => '#111');
 
var ii = 0;
function getH() { 

  thisCountry = countries.features[ii].properties.ISO_A2;
  var output = 0;
  for (let i = 0; i<data.length;i++){
      if (thisCountry === data[i].i){
           output = output + data[i].v;
      }
  }

  ii = ii + 1; 
  return (output/6000)+0.001;
  //return  ii/countries.features.length;
 }
    setTimeout(() => Globe.polygonAltitude(getH), 4000);

    // Setup renderer
    const renderer = new THREE.WebGLRenderer();
    renderer.setSize(window.innerWidth, window.innerHeight);
    document.getElementById('globeViz').appendChild(renderer.domElement);

    // Setup scene
    const scene = new THREE.Scene();
    scene.add(Globe);
    scene.add(new THREE.AmbientLight(0xbbbbbb));
    scene.add(new THREE.DirectionalLight(0xffffff, 0.6));

    // Setup camera
    const camera = new THREE.PerspectiveCamera();
    camera.aspect = window.innerWidth/ window.innerHeight;
    camera.updateProjectionMatrix();
    camera.position.z = 500;

    // Add camera controls
    const tbControls = new THREE.TrackballControls(camera, renderer.domElement);
    tbControls.minDistance = 101;
    tbControls.rotateSpeed = 5;
    tbControls.zoomSpeed = 0.8;

    // Kick-off renderer
    (function animate() { // IIFE
      // Frame cycle
      tbControls.update();
      renderer.render(scene, camera);
      requestAnimationFrame(animate);
    })();
  });
</script>
</body>
